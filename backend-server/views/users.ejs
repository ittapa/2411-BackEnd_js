<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
<div class="container mt-4">
    <h1>User Management</h1>

    <!-- Create New User 버튼 -->
    <a href="/create-user" class="btn btn-success mb-3">Create New User</a>

    <!-- 사용자 목록 테이블 -->
    <table class="table table-striped">
        <thead class="thead-dark">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        <% users.forEach(user => { %>
            <tr>
                <td><%= user.id %></td>
                <td><%= user.name %></td>
                <td><%= user.email %></td>
                <td>
                    <button class="btn btn-primary" onclick="openEditUserModal(<%= user.id %>, '<%= user.name %>', '<%= user.email %>')">Edit</button>
                    <button class="btn btn-danger" onclick="deleteUser(<%= user.id %>)">Delete</button>
                </td>
            </tr>
        <% }); %>
        </tbody>
    </table>
</div>

<!-- 사용자 수정 모달 -->
<div id="editUserModal" class="modal" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit User</h5>
                <button type="button" class="close" onclick="closeEditUserModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" id="editName" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        <input type="email" id="editEmail" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="editPassword">Password</label>
                        <input type="password" id="editPassword" class="form-control" required>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="submitEditUser()">Save Changes</button>
                    <button type="button" class="btn btn-secondary" onclick="closeEditUserModal()">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script>
    let currentUserId = null;

    // 모달 창 열기
    function openEditUserModal(id, name, email) {
        currentUserId = id;
        document.getElementById('editName').value = name;
        document.getElementById('editEmail').value = email;
        document.getElementById('editPassword').value = ''; // 비밀번호는 초기화
        document.getElementById('editUserModal').style.display = 'block';
    }

    // 모달 창 닫기
    function closeEditUserModal() {
        currentUserId = null;
        document.getElementById('editUserModal').style.display = 'none';
    }

    // 사용자 수정 제출
    async function submitEditUser() {
        const name = document.getElementById('editName').value;
        const email = document.getElementById('editEmail').value;
        const password = document.getElementById('editPassword').value;

        try {
            const response = await fetch(`/user/${currentUserId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, email, password }),
            });

            if (response.ok) {
                alert('User updated successfully!');
                location.reload();
            } else {
                const result = await response.json();
                alert(result.error || 'Failed to update user.');
            }
        } catch (error) {
            console.error('Error updating user:', error);
            alert('An error occurred while updating the user.');
        }

        closeEditUserModal();
    }

    // 사용자 삭제
    async function deleteUser(id) {
        try {
            const response = await fetch(`/user/${id}`, {
                method: 'DELETE',
            });

            if (response.ok) {
                alert('User deleted successfully!');
                location.reload();
            } else {
                const result = await response.json();
                alert(result.error || 'Failed to delete user.');
            }
        } catch (error) {
            console.error('Error deleting user:', error);
            alert('An error occurred while deleting the user.');
        }
    }
</script>
</body>
</html>
